print "execption";
print EC;
print EPN;
print "EIP";
print EIP;
alias userSP R1;
userSP=SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9]=-1;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13]=SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 -1;

backup;

SP=SP+1;
[SP]=EIP;

if( (EC!=0) || ( userSP == (PTLR*512-1) ) ) then
	if(EC==1) then
		print "IlligalInst!";
	endif;
	if(EC==2) then
		print "IlligalMemAcc";
	endif;
	if(EC==3) then
		print "ArithExecp";
	endif;

	//call exit process
	multipush(R1);
	R1=3;
	R2=[SYSTEM_STATUS_TABLE + 1];
	call MOD_1;
	multipop(R1);

	//call scheduler
	multipush(R1);
	call MOD_5;
	multipop(R1);
else

	if(EPN >=4 && EPN < 8) then
		
		//get code page
		multipush(R1);
		R1=5;
		R2=[DISK_MAP_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 10) + EPN];
		call MOD_2;
		multipop(R1);

		[PTBR + EPN]=R0;
		[PTBR + EPN]="1100";

	endif;
	
	if(EPN==2 || EPN==3) then
		
		//get free page
		multipush(R1);
		R1=1;
		multipop(R1);
		[PTBR + 2*EPN]=R0;
		[PTBR + 2*EPN+1]="1110";

	endif;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9]=0;
EIP=[SP];
SP=SP-1;
restore;
SP=userSP;
SP=SP+1;
[([PTBR + 2*(SP/512)] * 512) + (SP%512)]=EIP;
print "EIP";
print EIP;
ireturn;

endif;